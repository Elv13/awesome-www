# Description
awesome is a tiling window manager initialy based on a [dwm](http://www.suckless.org/wiki/dwm) code rewriting.
It's extremely fast, small, dynamic and awesome.

Windows can be managed in several layouts: tiled and floating.
Each layout can be applied on the fly, optimizing the environment for the application in use and the task performed.

Managing windows in tiled mode assures that no space will be waste on your screen. No gaps, no overlap.

## Tiled layout
With tiled layout, windows are managed in a master and a stacking area.
The master area contains the windows which currently need most attention, whereas the stacking area contains all other windows.
The master area can be splited in several rows and column, as you want.

## Floating layout
In floating layout, windows can be resized and moved freely, just like a usual window manager.
Dialog windows are always managed floating, regardless of the layout selected.

## Tags
Windows are grouped by tags. Each window can be tagged with one or multiple tags.
Selecting certain tags displays all windows with those tags. Each tag can have its own layout.

Tags can be compared to virtual desktops, but it's more powerful: you can quickly merge and show several tags at the same time,
and go back to only one tag after.

## Status bar
awesome contains a small status bar which displays all available tags, the layout, the title of the focused window, and text read from standard input.
The selected tags are highlighted with a different color, while the tags of the focused window are highlighted with a small point.
awesome draws a small border around windows to indicate their focus state.

Every aspect of awesome is configurable via a configuration file: [[awesomerc]].

# Features and non-features
In contrast to ion, larswm, wmii, or dwm, awesome is much, pick 2 from that list: smaller, faster, simpler or awesome.

* Very stable.
* No mouse needed.
* Multihead support (Xinerama or Zaphod mode).
* Some real transparency support (using Composite extension and xcompmgr for now).
* Some XRandR support.
* No Lua integration, no 9P support, no editable tagbars, no remote control, and comes without any additional tools.
* Only a single binary.
* No limit on its source size, awesome have features we want.
* Doesn't distinguish between layers: there is no floating or tiled layer. Whether or not the clients of currently selected tag(s) are in tiled layout, you can rearrange them on the fly. Popup and fixed-size windows are always floating, however.
* Customized through editing a configuration file, which makes it extremely easy to configure. You don't have to learn Lua/sh/ruby or some weird configuration file format (like X resource files), or recompile source code each time you do something:, just edit the configuration file, for god's sake.
* Reads from the standard input to print arbitrary status text (like the date, load, battery charge).

